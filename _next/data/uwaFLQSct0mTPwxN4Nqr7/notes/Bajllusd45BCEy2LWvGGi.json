{"pageProps":{"note":{"id":"Bajllusd45BCEy2LWvGGi","title":"Moving Average","desc":"","updated":1629953802575,"created":1629953123940,"nav_order":27,"custom":{"nav_order":27},"fname":"algos.dailybyte.d27","type":"note","vault":{"fsPath":"vault"},"contentHash":"9cfe67d2947999043bfbc032f5f539a5","links":[{"type":"wiki","from":{"fname":"algos.dailybyte.d27","id":"Bajllusd45BCEy2LWvGGi","vaultName":"vault"},"value":"python","position":{"start":{"line":48,"column":4,"offset":1121},"end":{"line":48,"column":14,"offset":1131},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"python"}},{"type":"wiki","from":{"fname":"algos.dailybyte.d27","id":"Bajllusd45BCEy2LWvGGi","vaultName":"vault"},"value":"go","position":{"start":{"line":63,"column":4,"offset":1397},"end":{"line":63,"column":10,"offset":1403},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"go"}},{"type":"wiki","from":{"fname":"algos.dailybyte.d27","id":"Bajllusd45BCEy2LWvGGi","vaultName":"vault"},"value":"rust","position":{"start":{"line":65,"column":4,"offset":1408},"end":{"line":65,"column":12,"offset":1416},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"rust"}},{"from":{"fname":"go","id":"96Hj5nYpnUciwlTenFpoU","vaultName":"vault"},"type":"backlink","position":{"start":{"line":67,"column":1,"offset":856},"end":{"line":67,"column":27,"offset":882},"indent":[]},"value":"algos.dailybyte.d27"},{"from":{"fname":"python","id":"7kyCk8YAkDvIrxLtAUFkG","vaultName":"vault"},"type":"backlink","position":{"start":{"line":55,"column":1,"offset":837},"end":{"line":55,"column":31,"offset":867},"indent":[]},"value":"algos.dailybyte.d27"},{"from":{"fname":"rust","id":"A6TBKYAcFVjBqZpdbHuaS","vaultName":"vault"},"type":"backlink","position":{"start":{"line":71,"column":1,"offset":960},"end":{"line":71,"column":29,"offset":988},"indent":[]},"value":"algos.dailybyte.d27"}],"anchors":{"problem":{"type":"header","text":"Problem","value":"problem","line":8,"column":0,"depth":2},"":{"type":"header","text":"","value":"","line":55,"column":0,"depth":2},"-1":{"type":"header","text":"","value":"-1","line":70,"column":0,"depth":2},"-2":{"type":"header","text":"","value":"-2","line":72,"column":0,"depth":2}},"children":[],"parent":"hXfo1GFtYfbMpCOVkr1Gp","data":{}},"body":"<h1 id=\"moving-average\">Moving Average<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#moving-average\"></a></h1>\n<h2 id=\"problem\">Problem<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#problem\"></a></h2>\n<p>This question is asked by Microsoft.</p>\n<p>Design a class, MovingAverage, which contains a method, next that is responsible for returning the moving average from a stream of integers.</p>\n<p>Note: a moving average is the average of a subset of data at a given point in time.</p>\n<p>Ex: Given the following series of events...</p>\n<blockquote>\n<p>// i.e. the moving average has a capacity of 3.</p>\n<p>MovingAverage movingAverage = new MovingAverage(3);</p>\n<p>m.next(3) returns 3 because (3 / 1) = 3</p>\n<p>m.next(5) returns 4 because (3 + 5) / 2 = 4</p>\n<p>m.next(7) = returns 5 because (3 + 5 + 7) / 3 = 5</p>\n<p>m.next(6) = returns 6 because (5 + 7 + 6) / 3 = 6</p>\n</blockquote>\n<p>MovingAverage class definition:</p>\n<pre><code>public class MovingAverage {\n    // TODO: declare any instance variables you require.\n\n    /**\n    * Initializes a MovingAverage with a\n    * capacity of `size`.\n    */\n    public MovingAverage(int size) {\n    // TODO: initialize your MovingAverage.\n    }\n\n    /**\n    * Adds `val` to the stream of numbers\n    * and returns the current average of the numbers.\n    */\n    public double next(int val) {\n    // TODO: implement this method.\n    }\n\n}\n</code></pre>\n<h2 id=\"python\"><a href=\"/notes/7kyCk8YAkDvIrxLtAUFkG\">Python</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MovingAverage</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>size<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size\n        self<span class=\"token punctuation\">.</span>q <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>maxlen<span class=\"token operator\">=</span>size<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>q<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"go\"><a href=\"/notes/96Hj5nYpnUciwlTenFpoU\">Go</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#go\"></a></h2>\n<h2 id=\"rust\"><a href=\"/notes/A6TBKYAcFVjBqZpdbHuaS\">Rust</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#rust\"></a></h2>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/96Hj5nYpnUciwlTenFpoU\">Go</a></li>\n<li><a href=\"/notes/7kyCk8YAkDvIrxLtAUFkG\">Python</a></li>\n<li><a href=\"/notes/A6TBKYAcFVjBqZpdbHuaS\">Rust</a></li>\n</ul>","noteIndex":{"id":"root","title":"BrainMatter","desc":"","updated":1668313955403,"created":1602915435296,"stub":false,"nav_order":0,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"7b584540f5ff09a7953c66d95b7ee329","links":[],"anchors":{},"children":["ovOjtfOpF3vhfFUZi6DHp","3dNch4I3rcDy5xXFn3R6B","BWzIJm01jQ6aNNg56CwnS","96Hj5nYpnUciwlTenFpoU","6Wl0i0BjF7yD85uM5RTyK","o3yahkxofd7qighsrvpg893","7kyCk8YAkDvIrxLtAUFkG","A6TBKYAcFVjBqZpdbHuaS","w3B0c1Y72MfzhwoVNx7vx","t6ilpq115sipjv378ambtkv"],"parent":null,"data":{},"body":"\n\n![DeltaManiac](https://raw.githubusercontent.com/DeltaManiac/DeltaManiac/main/vault/assets/banner.svg)\n\n- ðŸ”­ Iâ€™m currently playing Destiny 2\n- ðŸŒ± Iâ€™m currently learning [Rust](https://www.rust-lang.org) at night and [Go](https://golang.org/) at work\n- ðŸ“« How to reach me: [twitter](https://twitter.com/Delta_Maniac)\n- ðŸ˜„ Pronouns: He/Him\n<!-- - âš¡ Fun fact: The banner was provided by [Pushkar Anand](https://github.com/pushkar8723) sourced from [Responsive Cow Jumps Over the Moooooon](https://codepen.io/sdras/pen/doZReX) -->\n<!-- // - ðŸ‘¯ Iâ€™m looking to collaborate on ...\n// - ðŸ¤” Iâ€™m looking for help with ...\n// - ðŸ’¬ Ask me about ... -->\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":true,"siteRootDir":"docs","seo":{"title":"BrainMatter","description":"Personal knowledge space","author":"DeltaManiac","twitter":"delta_maniac"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree","editRepository":"https://github.com/DeltaManiac/deltamaniac.github.io"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://deltamaniac.github.io/","hierarchy":{"root":{"publishByDefault":true}},"siteFaviconPath":"favicon.ico","siteIndex":"root"},"generateChangelog":true}},"__N_SSG":true}