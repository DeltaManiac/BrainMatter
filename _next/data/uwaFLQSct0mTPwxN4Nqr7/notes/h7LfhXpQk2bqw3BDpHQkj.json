{"pageProps":{"note":{"id":"h7LfhXpQk2bqw3BDpHQkj","title":"Find First and Last position of element in a sorted array","desc":"34","updated":1639217363036,"created":1639210381931,"custom":{},"fname":"algos.lc.34","type":"note","vault":{"fsPath":"vault"},"contentHash":"61729550dfb8dd17f334e7b7d3891d2e","links":[{"type":"wiki","from":{"fname":"algos.lc.34","id":"h7LfhXpQk2bqw3BDpHQkj","vaultName":"vault"},"value":"python","position":{"start":{"line":36,"column":1,"offset":599},"end":{"line":36,"column":11,"offset":609},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"python"}}],"anchors":{},"children":[],"parent":"ap9g9q7jgmn9b40chjgtnrk","data":{}},"body":"<h1 id=\"find-first-and-last-position-of-element-in-a-sorted-array\">Find First and Last position of element in a sorted array<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#find-first-and-last-position-of-element-in-a-sorted-array\"></a></h1>\n<p>Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.</p>\n<p>If target is not found in the array, return [-1, -1].</p>\n<p>You must write an algorithm with O(log n) runtime complexity.</p>\n<p>Example 1:</p>\n<pre><code>Input: nums = [5,7,7,8,8,10], target = 8\nOutput: [3,4]\n</code></pre>\n<p>Example 2:</p>\n<pre><code>Input: nums = [5,7,7,8,8,10], target = 6\nOutput: [-1,-1]\n</code></pre>\n<p>Example 3:</p>\n<pre><code>Input: nums = [], target = 0\nOutput: [-1,-1]\n</code></pre>\n<p>Constraints:</p>\n<pre><code>0 &#x3C;= nums.length &#x3C;= 105\n-109 &#x3C;= nums[i] &#x3C;= 109\nnums is a non-decreasing array.\n-109 &#x3C;= target &#x3C;= 109\n</code></pre>\n<p><a href=\"/notes/7kyCk8YAkDvIrxLtAUFkG\">Python</a></p>\n<pre class=\"language-python\"><code class=\"language-python\">\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">searchRange</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n        left <span class=\"token operator\">=</span> findStart<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span>target<span class=\"token punctuation\">)</span>\n        right <span class=\"token operator\">=</span> findEnd<span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span>target<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>left<span class=\"token punctuation\">,</span>right<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">findStart</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    idx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    low <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    high <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">while</span> low<span class=\"token operator\">&#x3C;=</span>high<span class=\"token punctuation\">:</span>\n        mid <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>floor<span class=\"token punctuation\">(</span>low <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>high <span class=\"token operator\">-</span> low<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span>target<span class=\"token punctuation\">:</span>\n            idx <span class=\"token operator\">=</span> mid\n            high <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>target<span class=\"token punctuation\">:</span>\n            high <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            low <span class=\"token operator\">=</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> idx\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">findEnd</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">,</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    idx <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n    low <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    high <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n    <span class=\"token keyword\">while</span> low<span class=\"token operator\">&#x3C;=</span>high<span class=\"token punctuation\">:</span>\n        mid <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span>floor<span class=\"token punctuation\">(</span>low <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>high <span class=\"token operator\">-</span> low<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span>target<span class=\"token punctuation\">:</span>\n            idx <span class=\"token operator\">=</span> mid\n            low <span class=\"token operator\">=</span> mid <span class=\"token operator\">+</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> nums<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token operator\">></span>target<span class=\"token punctuation\">:</span>\n            high <span class=\"token operator\">=</span> mid <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            low <span class=\"token operator\">=</span> mid<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> idx\n\n</code></pre>","noteIndex":{"id":"root","title":"BrainMatter","desc":"","updated":1668313955403,"created":1602915435296,"stub":false,"nav_order":0,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"7b584540f5ff09a7953c66d95b7ee329","links":[],"anchors":{},"children":["ovOjtfOpF3vhfFUZi6DHp","3dNch4I3rcDy5xXFn3R6B","BWzIJm01jQ6aNNg56CwnS","96Hj5nYpnUciwlTenFpoU","6Wl0i0BjF7yD85uM5RTyK","o3yahkxofd7qighsrvpg893","7kyCk8YAkDvIrxLtAUFkG","A6TBKYAcFVjBqZpdbHuaS","w3B0c1Y72MfzhwoVNx7vx","t6ilpq115sipjv378ambtkv"],"parent":null,"data":{},"body":"\n\n![DeltaManiac](https://raw.githubusercontent.com/DeltaManiac/DeltaManiac/main/vault/assets/banner.svg)\n\n- ðŸ”­ Iâ€™m currently playing Destiny 2\n- ðŸŒ± Iâ€™m currently learning [Rust](https://www.rust-lang.org) at night and [Go](https://golang.org/) at work\n- ðŸ“« How to reach me: [twitter](https://twitter.com/Delta_Maniac)\n- ðŸ˜„ Pronouns: He/Him\n<!-- - âš¡ Fun fact: The banner was provided by [Pushkar Anand](https://github.com/pushkar8723) sourced from [Responsive Cow Jumps Over the Moooooon](https://codepen.io/sdras/pen/doZReX) -->\n<!-- // - ðŸ‘¯ Iâ€™m looking to collaborate on ...\n// - ðŸ¤” Iâ€™m looking for help with ...\n// - ðŸ’¬ Ask me about ... -->\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":true,"siteRootDir":"docs","seo":{"title":"BrainMatter","description":"Personal knowledge space","author":"DeltaManiac","twitter":"delta_maniac"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree","editRepository":"https://github.com/DeltaManiac/deltamaniac.github.io"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://deltamaniac.github.io/","hierarchy":{"root":{"publishByDefault":true}},"siteFaviconPath":"favicon.ico","siteIndex":"root"},"generateChangelog":true}},"__N_SSG":true}