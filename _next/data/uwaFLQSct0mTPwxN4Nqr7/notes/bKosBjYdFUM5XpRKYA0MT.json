{"pageProps":{"note":{"id":"bKosBjYdFUM5XpRKYA0MT","title":"Object Oriented Programming","desc":"","updated":1628100102303,"created":1628035170150,"nav_order":2,"custom":{"nav_order":2},"fname":"python.oop","type":"note","vault":{"fsPath":"vault"},"contentHash":"9322005b552ca09f80f2f89448851231","links":[],"anchors":{"classes":{"type":"header","text":"Classes","value":"classes","line":8,"column":0,"depth":2},"sample":{"type":"header","text":"Sample","value":"sample","line":10,"column":0,"depth":2},"special-methods":{"type":"header","text":"Special Methods","value":"special-methods","line":28,"column":0,"depth":2},"operator-overloading":{"type":"header","text":"Operator Overloading","value":"operator-overloading","line":71,"column":0,"depth":2},"iterators":{"type":"header","text":"Iterators","value":"iterators","line":107,"column":0,"depth":2}},"children":[],"parent":"7kyCk8YAkDvIrxLtAUFkG","data":{}},"body":"<h1 id=\"object-oriented-programming\">Object Oriented Programming<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#object-oriented-programming\"></a></h1>\n<h2 id=\"classes\">Classes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#classes\"></a></h2>\n<h2 id=\"sample\">Sample<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#sample\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CreditCard</span><span class=\"token punctuation\">:</span>\n <span class=\"token triple-quoted-string string\">\"\"\" A CC for consumer \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>customer<span class=\"token punctuation\">,</span>bank<span class=\"token punctuation\">,</span>acn<span class=\"token punctuation\">,</span>limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_customer <span class=\"token operator\">=</span> customer\n        self<span class=\"token punctuation\">.</span>_bank <span class=\"token operator\">=</span> bank\n        self<span class=\"token punctuation\">.</span>_account <span class=\"token operator\">=</span> acn\n        self<span class=\"token punctuation\">.</span>_limit <span class=\"token operator\">=</span> limit\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_customer</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_customer\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">make_payment</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>account <span class=\"token operator\">-=</span> amount\n</code></pre>\n<h2 id=\"special-methods\">Special Methods<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#special-methods\"></a></h2>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Syntax</th><th>Special Method</th></tr></thead><tbody><tr><td>a + b</td><td>a.__add\\<strong>(b) or b.__radd\\</strong>(a)</td></tr><tr><td>a - b</td><td>a.__sub\\__(b) or b.__rsub__(a)</td></tr><tr><td>a * b</td><td>a.__mul__(b) or b.__rmul__(a)</td></tr><tr><td>a / b</td><td>a.__truediv__(b) or b.__rtruediv__(a)</td></tr><tr><td>a // b</td><td>a.__floordiv__(b) or b.__rfloordiv__(a)</td></tr><tr><td>a % b</td><td>a.__mod__(b) or b.__rmod__(a)</td></tr><tr><td>a ** b</td><td>a.__pow__(b) or b.__rpow__(a)</td></tr><tr><td>a &#x3C;&#x3C; b</td><td>a.__lshift__(b) or b.__rlshift__(a)</td></tr><tr><td>a >> b</td><td>a.__rshift__(b) or b.__rrshift__(a)</td></tr><tr><td>a &#x26; b</td><td>a.__and__(b) or b.__rand__(a)</td></tr><tr><td>a ^ b</td><td>a.__xor__(b) or b.__rxor__(a)</td></tr><tr><td>a | b</td><td>a.__or__(b) or b.__ror__(a)</td></tr><tr><td>a += b <br> a -= b <br> a *= b <br> ...</td><td>a.__iadd__(b) <br> a.__isub__(b) <br> a.__imul__(b)<br> ...</td></tr><tr><td>+a</td><td>a.__pos__()</td></tr><tr><td>-a</td><td>a.__neg__()</td></tr><tr><td>~a</td><td>a.__invert__()</td></tr><tr><td>abs(a)</td><td>a.__abs__()</td></tr><tr><td>a &#x3C; b</td><td>a.__lt__(b)</td></tr><tr><td>a &#x3C;= b</td><td>a.__le__(b)</td></tr><tr><td>a > b</td><td>a.__gt__(b)</td></tr><tr><td>a >= b</td><td>a.__ge__(b)</td></tr><tr><td>a == b</td><td>a.__eq__(b)</td></tr><tr><td>a != b</td><td>a.__ne__(b)</td></tr><tr><td>v in a</td><td>a.__contains__(v)</td></tr><tr><td>a[k]</td><td>a.__getitem__(k)</td></tr><tr><td>a[k]=v</td><td>a.__setitem__(k,v)</td></tr><tr><td>del a[k]</td><td>a.__delitem__(k)</td></tr><tr><td>a(arg1, arg2)</td><td>a.__call__(arg1,arg2)</td></tr><tr><td>len(a)</td><td>a.__len__()</td></tr><tr><td>hash(a)</td><td>a.__hash__()</td></tr><tr><td>iter(a)</td><td>a.__iter__()</td></tr><tr><td>next(a)</td><td>a.__next__()</td></tr><tr><td>bool(a)</td><td>a.__bool__()</td></tr><tr><td>float(a)</td><td>a.__float__()</td></tr><tr><td>int(a)</td><td>a.__int__()</td></tr><tr><td>repr(a)</td><td>a.__repr__()</td></tr><tr><td>reversed(a)</td><td>a.__reversed__()</td></tr><tr><td>str(a)</td><td>a.__str__()</td></tr></tbody></table></div>\n<h2 id=\"operator-overloading\">Operator Overloading<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#operator-overloading\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Vector</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_coords <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> d\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__len__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_coords<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__getitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>_coords<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__setitem__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_coords<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> val\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__add__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">raise</span> ValurError<span class=\"token punctuation\">(</span><span class=\"token string\">'Dimensions must agree'</span><span class=\"token punctuation\">)</span>\n        result <span class=\"token operator\">=</span> Vector<span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            result<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> self<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> other<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span> result\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__eq__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>_coords <span class=\"token operator\">==</span> other<span class=\"token punctuation\">.</span>_coords\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__ne__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> other<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">not</span> self <span class=\"token operator\">==</span> other\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'&#x3C;'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>_coords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span><span class=\"token string\">'>'</span>\n\n</code></pre>\n<h2 id=\"iterators\">Iterators<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#iterators\"></a></h2>","noteIndex":{"id":"root","title":"BrainMatter","desc":"","updated":1668313955403,"created":1602915435296,"stub":false,"nav_order":0,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"7b584540f5ff09a7953c66d95b7ee329","links":[],"anchors":{},"children":["ovOjtfOpF3vhfFUZi6DHp","3dNch4I3rcDy5xXFn3R6B","BWzIJm01jQ6aNNg56CwnS","96Hj5nYpnUciwlTenFpoU","6Wl0i0BjF7yD85uM5RTyK","o3yahkxofd7qighsrvpg893","7kyCk8YAkDvIrxLtAUFkG","A6TBKYAcFVjBqZpdbHuaS","w3B0c1Y72MfzhwoVNx7vx","t6ilpq115sipjv378ambtkv"],"parent":null,"data":{},"body":"\n\n![DeltaManiac](https://raw.githubusercontent.com/DeltaManiac/DeltaManiac/main/vault/assets/banner.svg)\n\n- 🔭 I’m currently playing Destiny 2\n- 🌱 I’m currently learning [Rust](https://www.rust-lang.org) at night and [Go](https://golang.org/) at work\n- 📫 How to reach me: [twitter](https://twitter.com/Delta_Maniac)\n- 😄 Pronouns: He/Him\n<!-- - ⚡ Fun fact: The banner was provided by [Pushkar Anand](https://github.com/pushkar8723) sourced from [Responsive Cow Jumps Over the Moooooon](https://codepen.io/sdras/pen/doZReX) -->\n<!-- // - 👯 I’m looking to collaborate on ...\n// - 🤔 I’m looking for help with ...\n// - 💬 Ask me about ... -->\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":true,"siteRootDir":"docs","seo":{"title":"BrainMatter","description":"Personal knowledge space","author":"DeltaManiac","twitter":"delta_maniac"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree","editRepository":"https://github.com/DeltaManiac/deltamaniac.github.io"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://deltamaniac.github.io/","hierarchy":{"root":{"publishByDefault":true}},"siteFaviconPath":"favicon.ico","siteIndex":"root"},"generateChangelog":true}},"__N_SSG":true}