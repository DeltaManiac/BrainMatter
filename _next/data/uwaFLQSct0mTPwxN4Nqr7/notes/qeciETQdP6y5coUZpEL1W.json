{"pageProps":{"note":{"id":"qeciETQdP6y5coUZpEL1W","title":"Resource Locating and Traffic Routing","desc":"","updated":1640654060801,"created":1640232890111,"nav_order":2,"custom":{"nav_order":2},"fname":"programming.network.loc_route","type":"note","vault":{"fsPath":"vault"},"contentHash":"a4c138df6fd09e5c9cf5ef945e922620","links":[],"anchors":{"internet-protocol":{"type":"header","text":"Internet Protocol","value":"internet-protocol","line":9,"column":0,"depth":1},"ipv4-addressing":{"type":"header","text":"IPv4 Addressing","value":"ipv4-addressing","line":13,"column":0,"depth":2},"network-and-host-ids":{"type":"header","text":"Network and Host IDs","value":"network-and-host-ids","line":17,"column":0,"depth":3},"subdividing-ipv4-addresses-into-subnets":{"type":"header","text":"Subdividing IPv4 Addresses into Subnets","value":"subdividing-ipv4-addresses-into-subnets","line":43,"column":0,"depth":3},"allocating-networks-that-dont-break-at-an-octet-boundary":{"type":"header","text":"Allocating Networks that don't break at an Octet Boundary","value":"allocating-networks-that-dont-break-at-an-octet-boundary","line":107,"column":0,"depth":3},"network-address-translation":{"type":"header","text":"Network Address Translation","value":"network-address-translation","line":129,"column":0,"depth":3},"steps":{"type":"header","text":"Steps","value":"steps","line":137,"column":0,"depth":5},"unicast-multicast-and-broadcast":{"type":"header","text":"Unicast, Multicast and Broadcast","value":"unicast-multicast-and-broadcast","line":145,"column":0,"depth":3},"resolving-mac-address-to-a-physical-network-connection":{"type":"header","text":"Resolving MAC Address to a Physical Network Connection","value":"resolving-mac-address-to-a-physical-network-connection","line":153,"column":0,"depth":3},"ipv6-addressing":{"type":"header","text":"IPv6 Addressing","value":"ipv6-addressing","line":158,"column":0,"depth":2},"simplifying-ipv6":{"type":"header","text":"Simplifying IPv6","value":"simplifying-ipv6","line":164,"column":0,"depth":4},"ipv6-network-and-host-addresses":{"type":"header","text":"IPv6 Network and Host Addresses","value":"ipv6-network-and-host-addresses","line":176,"column":0,"depth":4},"ipv6-address-categories":{"type":"header","text":"IPv6 Address Categories","value":"ipv6-address-categories","line":193,"column":0,"depth":4},"unicast":{"type":"header","text":"Unicast","value":"unicast","line":195,"column":0,"depth":5},"multicast":{"type":"header","text":"Multicast","value":"multicast","line":199,"column":0,"depth":5},"anycast":{"type":"header","text":"Anycast","value":"anycast","line":203,"column":0,"depth":4}},"children":[],"parent":"t5w4acej37neksi1gifrvfo","data":{}},"body":"<h1 id=\"resource-locating-and-traffic-routing\">Resource Locating and Traffic Routing<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#resource-locating-and-traffic-routing\"></a></h1>\n<h1 id=\"internet-protocol\">Internet Protocol<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#internet-protocol\"></a></h1>\n<p>Set of rules that dictate the format of the data send over a network</p>\n<h2 id=\"ipv4-addressing\">IPv4 Addressing<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ipv4-addressing\"></a></h2>\n<p>32-bit numbers as 4 octets</p>\n<h3 id=\"network-and-host-ids\">Network and Host IDs<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#network-and-host-ids\"></a></h3>\n<p>IPv4 address represents two component : networkID and host ID</p>\n<p><strong>NetworkID</strong>: informs the network devices(routers) responsible for shuttling packets toward their destination about the the next appropriate hop in the transmission</p>\n<p><strong>HostID</strong>: router uses the hostID to deliver data to a specific recipient</p>\n<p>For a 32-bit IPv4 address depending on the network size the networkID is computed and the remaining bits compute the hostID</p>\n<p>e.g. in a 16-bit Network the first two octets determine the networkID and the remaining two octets determine the hostID</p>\n<p>For address 192.168.212.056 in a 16-bit network</p>\n<pre>\n       IPv4 Address\n     ---------------\n     192.168.212.056\n            |\n            |\n192.168.0.0 | 0.0.212.056\n------------|------------\nNetworkID   | HostID\n</pre>\n<h3 id=\"subdividing-ipv4-addresses-into-subnets\">Subdividing IPv4 Addresses into Subnets<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#subdividing-ipv4-addresses-into-subnets\"></a></h3>\n<p><strong>Subnets</strong>: Nodes that have same NetworkID but unique HostID</p>\n<p><strong>CIDR</strong>: Classless Inter-Domain Routing</p>\n<p>Indicate number of bits in the networkID by appending a network prefix for each IP address. It consists of a forward slash and an integer</p>\n<p>Network IP derived by applying a subnet mask</p>\n<p>e.g. 192.168.15.69/16 -> 16 bit network and the first 16 bits are the networkID</p>\n<div class=\"table-responsive\">\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>CIDR Prefix length</th><th>Subnet Mask</th><th>Available Networks</th><th>Hosts/Network</th></tr></thead><tbody><tr><td>8</td><td>255.0.0.0</td><td>1</td><td>16,777,214</td></tr><tr><td>9</td><td>255.128.0.0</td><td>2</td><td>8,388,606</td></tr><tr><td>10</td><td>255.192.0.0</td><td>4</td><td>4,194,302</td></tr><tr><td>11</td><td>255.224.0.0</td><td>8</td><td>2,097,150</td></tr><tr><td>12</td><td>255.240.0.0</td><td>16</td><td>1,048,574</td></tr><tr><td>13</td><td>255.248.0.0</td><td>32</td><td>524,286</td></tr><tr><td>14</td><td>255.252.0.0</td><td>64</td><td>262,142</td></tr><tr><td>15</td><td>255.254.0.0</td><td>128</td><td>131,070</td></tr><tr><td>16</td><td>255.255.0.0</td><td>256</td><td>65,534</td></tr><tr><td>17</td><td>255.255.128.0</td><td>512</td><td>32,766</td></tr><tr><td>18</td><td>255.255.192.0</td><td>1,024</td><td>16,382</td></tr><tr><td>19</td><td>255.255.224.0</td><td>2,048</td><td>8,190</td></tr><tr><td>20</td><td>255.255.240.0</td><td>4,096</td><td>4,094</td></tr><tr><td>21</td><td>255.255.248.0</td><td>8,192</td><td>2,046</td></tr><tr><td>22</td><td>255.255.252.0</td><td>16,384</td><td>1,022</td></tr><tr><td>23</td><td>255.255.254.0</td><td>32,768</td><td>510</td></tr><tr><td>24</td><td>255.255.255.0</td><td>65,536</td><td>254</td></tr><tr><td>25</td><td>255.255.255.128</td><td>131,072</td><td>126</td></tr><tr><td>26</td><td>255.255.255.192</td><td>262,144</td><td>62</td></tr><tr><td>27</td><td>255.255.255.224</td><td>524,288</td><td>30</td></tr><tr><td>28</td><td>255.255.255.240</td><td>1,048,576</td><td>14</td></tr><tr><td>29</td><td>255.255.255.248</td><td>2,097,152</td><td>6</td></tr><tr><td>30</td><td>255.255.255.252</td><td>4,194,304</td><td>2</td></tr></tbody></table></div>\n<pre>e.g. For address 192.168.1.1/9 the mask is the first 9 bits\n    192  |    168   |   1      |     1\n11000000 | 10101000 | 00000001 | 00000001\n\nMask the first 9 bits\n\n11111111 | 10000000 | 00000000 | 00000000\n 255     |    0     |     0    |     0\n\n Network IP -> Ip Address &#x26; Mask\n11000000 | 10101000 | 00000001 | 00000001\n                AND\n11111111 | 10000000 | 00000000 | 00000000\n-------------------------------------------\n11000000 | 10000000 | 00000000 | 00000000\n    192  |     1    |     0    |     0\n\nso the possible IP addresses could be 192.1.0.0 and 192.0.0.0\n</pre>\n<p>Each network has 2 reserved host addresses.</p>\n<p>The first Ip address in e.g. 192.168.0.0/16 is 192.168.0.0 is the network address and the last address 192.168.255.255 is the broadcast address</p>\n<h3 id=\"allocating-networks-that-dont-break-at-an-octet-boundary\">Allocating Networks that don't break at an Octet Boundary<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#allocating-networks-that-dont-break-at-an-octet-boundary\"></a></h3>\n<p>IpAddr: 192.168.156.97/19</p>\n<pre>            192  |    168   |   156    |    97\n        11000000 | 10101000 | 10011100 | 01100001\n\nNetwork ID\n\n    |         19-Bits       |\n    -------------------------\n    11000000 | 10101000 | 10000000 | 00000000\n        192  |   168    |    128   |    0\n\n\nHost ID\n                                 |    13-Bits   |\n                                 ----------------\n        00000000 | 00000000 | 00011100 | 01100001\n           0     |     0    |  28      |   97\n</pre>\n<h3 id=\"network-address-translation\">Network Address Translation<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#network-address-translation\"></a></h3>\n<p><strong>Network Address Translation</strong>: Process that allows numerous nodes to share the same public address</p>\n<p>Devices: Firewall, Load Balancer, Router</p>\n<p><img src=\"/assets/images/2021-12-23-17-53-46.png\"></p>\n<h5 id=\"steps\">Steps<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#steps\"></a></h5>\n<ol>\n<li>\n<p>NAT Capable device receives a connection from the client socket 10.0.0.3:50926</p>\n</li>\n<li>\n<p>NAT requests the destination with its own IP 1.2.3.4:50926 and port being mapped to the internal client</p>\n</li>\n<li>\n<p>The response received is then sent to the client</p>\n</li>\n</ol>\n<h3 id=\"unicast-multicast-and-broadcast\">Unicast, Multicast and Broadcast<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#unicast-multicast-and-broadcast\"></a></h3>\n<p><strong>Unicast</strong>: Sending packets from one IP address to another IP address</p>\n<p><strong>Multicast</strong>: Sending a singe message to a group of nodes</p>\n<p><strong>Broadcast</strong>: Concurrently deliver a message to all IP addresses in a network (Achieved via sending messages to the broadcast address of its subnet)</p>\n<h3 id=\"resolving-mac-address-to-a-physical-network-connection\">Resolving MAC Address to a Physical Network Connection<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#resolving-mac-address-to-a-physical-network-connection\"></a></h3>\n<p>The MAC address is relevant to only the local network.</p>\n<h2 id=\"ipv6-addressing\">IPv6 Addressing<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ipv6-addressing\"></a></h2>\n<p>128-bit numbers arranged in colon-separated groups of 16bits(hextets)</p>\n<p>e.g. 4d61 : 6e64 : 792c : 2042 : 656e : 2c20 : 4c69 : 6c79</p>\n<h4 id=\"simplifying-ipv6\">Simplifying IPv6<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#simplifying-ipv6\"></a></h4>\n<p>To simplify an IPv6 address e.g. <code>fd00:4700:0010:0000:0000:0000:6814:d10</code></p>\n<ol>\n<li>\n<p>Safely remove all leading zeros in each hextet</p>\n<p><code>fd00:4700:10:0:0:0:6814:d103</code></p>\n</li>\n<li>\n<p>Replace leftmost group of consecutive zero-valued hextets with double colons</p>\n<p><code>00:4700:10::6814:d103</code></p>\n</li>\n</ol>\n<h4 id=\"ipv6-network-and-host-addresses\">IPv6 Network and Host Addresses<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ipv6-network-and-host-addresses\"></a></h4>\n<p><strong>Network Address</strong>: 0-64Bits</p>\n<p><strong>Global Routing Prefix</strong>: 0-48 bits</p>\n<p><strong>Subnet Id</strong>: 49-64 bits</p>\n<pre>+------Network Address-----+\n|                          |\n|4d61 : 6e64 : 792c : 2042 : 656e : 2c20 : 4c69 : 6c79|\n|_________GRP_______|      | |                        |\n                    |______| |                        |\n                    SubnetID +-----Interface ID-------+\n</pre>\n<h4 id=\"ipv6-address-categories\">IPv6 Address Categories<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#ipv6-address-categories\"></a></h4>\n<h5 id=\"unicast\">Unicast<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#unicast\"></a></h5>\n<p>Uniquely identifies a node. Enables 1:1 communication</p>\n<h5 id=\"multicast\">Multicast<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#multicast\"></a></h5>\n<p>Multicast addresses represents a group of nodes. Enables 1:n communication</p>\n<h4 id=\"anycast\">Anycast<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#anycast\"></a></h4>\n<p>Anycast addresses represents a group of node listening to the same address.</p>","noteIndex":{"id":"root","title":"BrainMatter","desc":"","updated":1668313955403,"created":1602915435296,"stub":false,"nav_order":0,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"7b584540f5ff09a7953c66d95b7ee329","links":[],"anchors":{},"children":["ovOjtfOpF3vhfFUZi6DHp","3dNch4I3rcDy5xXFn3R6B","BWzIJm01jQ6aNNg56CwnS","96Hj5nYpnUciwlTenFpoU","6Wl0i0BjF7yD85uM5RTyK","o3yahkxofd7qighsrvpg893","7kyCk8YAkDvIrxLtAUFkG","A6TBKYAcFVjBqZpdbHuaS","w3B0c1Y72MfzhwoVNx7vx","t6ilpq115sipjv378ambtkv"],"parent":null,"data":{},"body":"\n\n![DeltaManiac](https://raw.githubusercontent.com/DeltaManiac/DeltaManiac/main/vault/assets/banner.svg)\n\n- 🔭 I’m currently playing Destiny 2\n- 🌱 I’m currently learning [Rust](https://www.rust-lang.org) at night and [Go](https://golang.org/) at work\n- 📫 How to reach me: [twitter](https://twitter.com/Delta_Maniac)\n- 😄 Pronouns: He/Him\n<!-- - ⚡ Fun fact: The banner was provided by [Pushkar Anand](https://github.com/pushkar8723) sourced from [Responsive Cow Jumps Over the Moooooon](https://codepen.io/sdras/pen/doZReX) -->\n<!-- // - 👯 I’m looking to collaborate on ...\n// - 🤔 I’m looking for help with ...\n// - 💬 Ask me about ... -->\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":true,"siteRootDir":"docs","seo":{"title":"BrainMatter","description":"Personal knowledge space","author":"DeltaManiac","twitter":"delta_maniac"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree","editRepository":"https://github.com/DeltaManiac/deltamaniac.github.io"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://deltamaniac.github.io/","hierarchy":{"root":{"publishByDefault":true}},"siteFaviconPath":"favicon.ico","siteIndex":"root"},"generateChangelog":true}},"__N_SSG":true}