{"pageProps":{"note":{"id":"XM1Z7OUbeItoYxJICWxeN","title":"Will It Return ??","desc":"","updated":1628434941643,"created":1628100232230,"nav_order":3,"custom":{"nav_order":3},"fname":"algos.dailybyte.d3","type":"note","vault":{"fsPath":"vault"},"contentHash":"1f7079da2b944efee225efb71a297180","links":[{"type":"wiki","from":{"fname":"algos.dailybyte.d3","id":"XM1Z7OUbeItoYxJICWxeN","vaultName":"vault"},"value":"python","position":{"start":{"line":15,"column":4,"offset":407},"end":{"line":15,"column":14,"offset":417},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"python"}},{"type":"wiki","from":{"fname":"algos.dailybyte.d3","id":"XM1Z7OUbeItoYxJICWxeN","vaultName":"vault"},"value":"go","position":{"start":{"line":32,"column":4,"offset":687},"end":{"line":32,"column":10,"offset":693},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"go"}},{"type":"wiki","from":{"fname":"algos.dailybyte.d3","id":"XM1Z7OUbeItoYxJICWxeN","vaultName":"vault"},"value":"rust","position":{"start":{"line":53,"column":4,"offset":955},"end":{"line":53,"column":12,"offset":963},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"rust"}},{"from":{"fname":"go","id":"96Hj5nYpnUciwlTenFpoU","vaultName":"vault"},"type":"backlink","position":{"start":{"line":19,"column":1,"offset":191},"end":{"line":19,"column":26,"offset":216},"indent":[]},"value":"algos.dailybyte.d3"},{"from":{"fname":"python","id":"7kyCk8YAkDvIrxLtAUFkG","vaultName":"vault"},"type":"backlink","position":{"start":{"line":7,"column":1,"offset":76},"end":{"line":7,"column":30,"offset":105},"indent":[]},"value":"algos.dailybyte.d3"},{"from":{"fname":"rust","id":"A6TBKYAcFVjBqZpdbHuaS","vaultName":"vault"},"type":"backlink","position":{"start":{"line":23,"column":1,"offset":247},"end":{"line":23,"column":28,"offset":274},"indent":[]},"value":"algos.dailybyte.d3"}],"anchors":{"problem":{"type":"header","text":"Problem","value":"problem","line":8,"column":0,"depth":2},"":{"type":"header","text":"","value":"","line":22,"column":0,"depth":2},"-1":{"type":"header","text":"","value":"-1","line":39,"column":0,"depth":2},"-2":{"type":"header","text":"","value":"-2","line":60,"column":0,"depth":2}},"children":[],"parent":"hXfo1GFtYfbMpCOVkr1Gp","data":{}},"body":"<h1 id=\"will-it-return-\">Will It Return ??<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#will-it-return-\"></a></h1>\n<h2 id=\"problem\">Problem<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#problem\"></a></h2>\n<p>This question is asked by Amazon.</p>\n<p> Given a string representing the sequence of moves a robot vacuum makes, return whether or not it will return to its original position. The string will only contain L, R, U, and D characters, representing left, right, up, and down respectively.</p>\n<p>Ex: Given the following strings...</p>\n<blockquote>\n<p>\"LR\", return true</p>\n<p>\"URURD\", return false</p>\n<p>\"RUULLDRD\", return true</p>\n</blockquote>\n<h2 id=\"python\"><a href=\"/notes/7kyCk8YAkDvIrxLtAUFkG\">Python</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">does_it_return</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">:</span>\n    x<span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> word<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'R'</span><span class=\"token punctuation\">:</span>\n            x<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'L'</span><span class=\"token punctuation\">:</span>\n            x<span class=\"token operator\">-=</span><span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'U'</span><span class=\"token punctuation\">:</span>\n            y <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">elif</span> c <span class=\"token operator\">==</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">:</span>\n            y<span class=\"token operator\">-=</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> x<span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">and</span> y<span class=\"token operator\">==</span><span class=\"token number\">0</span>\n</code></pre>\n<h2 id=\"go\"><a href=\"/notes/96Hj5nYpnUciwlTenFpoU\">Go</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#go\"></a></h2>\n<pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">doesitreturn</span><span class=\"token punctuation\">(</span>word <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">{</span>\n\tx <span class=\"token operator\">:=</span> <span class=\"token number\">0</span>\n\ty <span class=\"token operator\">:=</span> <span class=\"token number\">00</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> c <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> word <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token char\">'R'</span> <span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token char\">'L'</span> <span class=\"token punctuation\">{</span>\n\t\t\tx <span class=\"token operator\">=</span> x <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token char\">'U'</span> <span class=\"token punctuation\">{</span>\n\t\t\ty <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token char\">'D'</span> <span class=\"token punctuation\">{</span>\n\t\t\ty <span class=\"token operator\">-=</span> <span class=\"token number\">1</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> x <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&#x26;&#x26;</span> y <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2 id=\"rust\"><a href=\"/notes/A6TBKYAcFVjBqZpdbHuaS\">Rust</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#rust\"></a></h2>\n<pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">does_it_return</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">:</span><span class=\"token operator\">&#x26;</span><span class=\"token keyword\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">-></span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> x <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token keyword\">mut</span> y <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> word<span class=\"token punctuation\">.</span><span class=\"token function\">chars</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token char\">'R'</span> <span class=\"token punctuation\">{</span>\n            x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token char\">'L'</span> <span class=\"token punctuation\">{</span>\n            x <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> c <span class=\"token operator\">==</span> <span class=\"token char\">'U'</span> <span class=\"token punctuation\">{</span>\n            y <span class=\"token operator\">+=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            y <span class=\"token operator\">-=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    x <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&#x26;&#x26;</span> y <span class=\"token operator\">==</span> <span class=\"token number\">0</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/96Hj5nYpnUciwlTenFpoU\">Go</a></li>\n<li><a href=\"/notes/7kyCk8YAkDvIrxLtAUFkG\">Python</a></li>\n<li><a href=\"/notes/A6TBKYAcFVjBqZpdbHuaS\">Rust</a></li>\n</ul>","noteIndex":{"id":"root","title":"BrainMatter","desc":"","updated":1668313955403,"created":1602915435296,"stub":false,"nav_order":0,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"7b584540f5ff09a7953c66d95b7ee329","links":[],"anchors":{},"children":["ovOjtfOpF3vhfFUZi6DHp","3dNch4I3rcDy5xXFn3R6B","BWzIJm01jQ6aNNg56CwnS","96Hj5nYpnUciwlTenFpoU","6Wl0i0BjF7yD85uM5RTyK","o3yahkxofd7qighsrvpg893","7kyCk8YAkDvIrxLtAUFkG","A6TBKYAcFVjBqZpdbHuaS","w3B0c1Y72MfzhwoVNx7vx","t6ilpq115sipjv378ambtkv"],"parent":null,"data":{},"body":"\n\n![DeltaManiac](https://raw.githubusercontent.com/DeltaManiac/DeltaManiac/main/vault/assets/banner.svg)\n\n- 🔭 I’m currently playing Destiny 2\n- 🌱 I’m currently learning [Rust](https://www.rust-lang.org) at night and [Go](https://golang.org/) at work\n- 📫 How to reach me: [twitter](https://twitter.com/Delta_Maniac)\n- 😄 Pronouns: He/Him\n<!-- - ⚡ Fun fact: The banner was provided by [Pushkar Anand](https://github.com/pushkar8723) sourced from [Responsive Cow Jumps Over the Moooooon](https://codepen.io/sdras/pen/doZReX) -->\n<!-- // - 👯 I’m looking to collaborate on ...\n// - 🤔 I’m looking for help with ...\n// - 💬 Ask me about ... -->\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":true,"siteRootDir":"docs","seo":{"title":"BrainMatter","description":"Personal knowledge space","author":"DeltaManiac","twitter":"delta_maniac"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree","editRepository":"https://github.com/DeltaManiac/deltamaniac.github.io"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://deltamaniac.github.io/","hierarchy":{"root":{"publishByDefault":true}},"siteFaviconPath":"favicon.ico","siteIndex":"root"},"generateChangelog":true}},"__N_SSG":true}