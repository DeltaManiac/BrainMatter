{"pageProps":{"note":{"id":"BHdKfMQ9cEOwiEPcANiIi","title":"String Symmetric Difference","desc":"","updated":1628785158643,"created":1628784258606,"nav_order":14,"custom":{"nav_order":14},"fname":"algos.dailybyte.d14","type":"note","vault":{"fsPath":"vault"},"contentHash":"f16694230f5a4a84dcb4a9e49576d8d2","links":[{"type":"wiki","from":{"fname":"algos.dailybyte.d14","id":"BHdKfMQ9cEOwiEPcANiIi","vaultName":"vault"},"value":"python","position":{"start":{"line":15,"column":4,"offset":672},"end":{"line":15,"column":14,"offset":682},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"python"}},{"type":"wiki","from":{"fname":"algos.dailybyte.d14","id":"BHdKfMQ9cEOwiEPcANiIi","vaultName":"vault"},"value":"go","position":{"start":{"line":29,"column":4,"offset":899},"end":{"line":29,"column":10,"offset":905},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"go"}},{"type":"wiki","from":{"fname":"algos.dailybyte.d14","id":"BHdKfMQ9cEOwiEPcANiIi","vaultName":"vault"},"value":"rust","position":{"start":{"line":31,"column":4,"offset":910},"end":{"line":31,"column":12,"offset":918},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"rust"}},{"from":{"fname":"go","id":"96Hj5nYpnUciwlTenFpoU","vaultName":"vault"},"type":"backlink","position":{"start":{"line":41,"column":1,"offset":492},"end":{"line":41,"column":27,"offset":518},"indent":[]},"value":"algos.dailybyte.d14"},{"from":{"fname":"python","id":"7kyCk8YAkDvIrxLtAUFkG","vaultName":"vault"},"type":"backlink","position":{"start":{"line":29,"column":1,"offset":421},"end":{"line":29,"column":31,"offset":451},"indent":[]},"value":"algos.dailybyte.d14"},{"from":{"fname":"rust","id":"A6TBKYAcFVjBqZpdbHuaS","vaultName":"vault"},"type":"backlink","position":{"start":{"line":45,"column":1,"offset":570},"end":{"line":45,"column":29,"offset":598},"indent":[]},"value":"algos.dailybyte.d14"}],"anchors":{"problem":{"type":"header","text":"Problem","value":"problem","line":8,"column":0,"depth":2},"":{"type":"header","text":"","value":"","line":22,"column":0,"depth":2},"-1":{"type":"header","text":"","value":"-1","line":36,"column":0,"depth":2},"-2":{"type":"header","text":"","value":"-2","line":38,"column":0,"depth":2}},"children":[],"parent":"hXfo1GFtYfbMpCOVkr1Gp","data":{}},"body":"<h1 id=\"string-symmetric-difference\">String Symmetric Difference<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#string-symmetric-difference\"></a></h1>\n<h2 id=\"problem\">Problem<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#problem\"></a></h2>\n<p>This question is asked by Amazon.</p>\n<p>Given two strings representing sentences, return the words that are not common to both strings (i.e. the words that only appear in one of the sentences). You may assume that each sentence is a sequence of words (without punctuation) correctly separated using space characters.</p>\n<p>Ex: given the following strings...</p>\n<blockquote>\n<p>sentence1 = \"the quick\", sentence2 = \"brown fox\", return [\"the\", \"quick\", \"brown\", \"fox\"]</p>\n<p>sentence1 = \"the tortoise beat the haire\", sentence2 = \"the tortoise lost to the haire\", return [\"beat\", \"to\", \"lost\"]</p>\n<p>sentence1 = \"copper coffee pot\", sentence2 = \"hot coffee pot\", return [\"copper\", \"hot\"]</p>\n</blockquote>\n<h2 id=\"python\"><a href=\"/notes/7kyCk8YAkDvIrxLtAUFkG\">Python</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#python\"></a></h2>\n<pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">findCommon</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">findCommon</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    s <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    t <span class=\"token operator\">=</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> s1<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       s<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> w <span class=\"token keyword\">in</span> s2<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       t<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> s<span class=\"token punctuation\">.</span>symmetric_difference<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n</code></pre>\n<h2 id=\"go\"><a href=\"/notes/96Hj5nYpnUciwlTenFpoU\">Go</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#go\"></a></h2>\n<h2 id=\"rust\"><a href=\"/notes/A6TBKYAcFVjBqZpdbHuaS\">Rust</a><a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#rust\"></a></h2>\n<hr>\n<strong>Backlinks</strong>\n<ul>\n<li><a href=\"/notes/96Hj5nYpnUciwlTenFpoU\">Go</a></li>\n<li><a href=\"/notes/7kyCk8YAkDvIrxLtAUFkG\">Python</a></li>\n<li><a href=\"/notes/A6TBKYAcFVjBqZpdbHuaS\">Rust</a></li>\n</ul>","noteIndex":{"id":"root","title":"BrainMatter","desc":"","updated":1668313955403,"created":1602915435296,"stub":false,"nav_order":0,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"7b584540f5ff09a7953c66d95b7ee329","links":[],"anchors":{},"children":["ovOjtfOpF3vhfFUZi6DHp","3dNch4I3rcDy5xXFn3R6B","BWzIJm01jQ6aNNg56CwnS","96Hj5nYpnUciwlTenFpoU","6Wl0i0BjF7yD85uM5RTyK","o3yahkxofd7qighsrvpg893","7kyCk8YAkDvIrxLtAUFkG","A6TBKYAcFVjBqZpdbHuaS","w3B0c1Y72MfzhwoVNx7vx","t6ilpq115sipjv378ambtkv"],"parent":null,"data":{},"body":"\n\n![DeltaManiac](https://raw.githubusercontent.com/DeltaManiac/DeltaManiac/main/vault/assets/banner.svg)\n\n- ðŸ”­ Iâ€™m currently playing Destiny 2\n- ðŸŒ± Iâ€™m currently learning [Rust](https://www.rust-lang.org) at night and [Go](https://golang.org/) at work\n- ðŸ“« How to reach me: [twitter](https://twitter.com/Delta_Maniac)\n- ðŸ˜„ Pronouns: He/Him\n<!-- - âš¡ Fun fact: The banner was provided by [Pushkar Anand](https://github.com/pushkar8723) sourced from [Responsive Cow Jumps Over the Moooooon](https://codepen.io/sdras/pen/doZReX) -->\n<!-- // - ðŸ‘¯ Iâ€™m looking to collaborate on ...\n// - ðŸ¤” Iâ€™m looking for help with ...\n// - ðŸ’¬ Ask me about ... -->\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":true,"siteRootDir":"docs","seo":{"title":"BrainMatter","description":"Personal knowledge space","author":"DeltaManiac","twitter":"delta_maniac"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree","editRepository":"https://github.com/DeltaManiac/deltamaniac.github.io"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://deltamaniac.github.io/","hierarchy":{"root":{"publishByDefault":true}},"siteFaviconPath":"favicon.ico","siteIndex":"root"},"generateChangelog":true}},"__N_SSG":true}