{"pageProps":{"note":{"id":"wfOGHenRJP9nCVGtK2e5V","title":"Reliable TCP Streams","desc":"","updated":1641226457245,"created":1640531504058,"nav_order":3,"custom":{"nav_order":3},"fname":"programming.network.tcp","type":"note","vault":{"fsPath":"vault"},"contentHash":"ed9bf22decdaeb9d22cc38c093b0a0d1","links":[],"anchors":{"tcp":{"type":"header","text":"TCP","value":"tcp","line":9,"column":0,"depth":1},"tcp-session":{"type":"header","text":"TCP Session","value":"tcp-session","line":18,"column":0,"depth":3},"handshake":{"type":"header","text":"Handshake","value":"handshake","line":35,"column":0,"depth":3},"acknowledging-receipt-of-packets-by-using-sequence-number":{"type":"header","text":"Acknowledging Receipt of Packets by using Sequence Number","value":"acknowledging-receipt-of-packets-by-using-sequence-number","line":44,"column":0,"depth":4},"receive-buffers-and-windows-sizes":{"type":"header","text":"Receive Buffers and Windows Sizes","value":"receive-buffers-and-windows-sizes","line":62,"column":0,"depth":4},"termination-tcp-sessions":{"type":"header","text":"Termination TCP Sessions","value":"termination-tcp-sessions","line":100,"column":0,"depth":3},"handling-less-graceful-terminations":{"type":"header","text":"Handling Less Graceful Terminations","value":"handling-less-graceful-terminations","line":133,"column":0,"depth":3}},"children":[],"parent":"t5w4acej37neksi1gifrvfo","data":{}},"body":"<h1 id=\"reliable-tcp-streams\">Reliable TCP Streams<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#reliable-tcp-streams\"></a></h1>\n<h1 id=\"tcp\">TCP<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tcp\"></a></h1>\n<p><strong>Packet Loss</strong>: Occurs when data fails to reach its destination</p>\n<p><strong>Network Congestion</strong>: Occurs when nodes attempt to send more data over a network connections than the connection can handle which causes nodes to discard the excess packets</p>\n<p><strong>Flow Control</strong>: Adaptation of transfer rate to make sure it transmits data as fast as possible while keeping dropped packets to a minimum</p>\n<h3 id=\"tcp-session\">TCP Session<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#tcp-session\"></a></h3>\n<p>Established with a three-way handshake</p>\n<pre>\n                   CLIENT                      SERVER\n               Dial  |                           | Listen\n                     |                           |\n                     | ----------SYN-----------> |\n                     |                           | Accept\n                     | &#x3C;-------SYN/ACK---------- |\n        Established  |                           |\n                     | ----------ACK-----------> | Established\n\n</pre>\n<h3 id=\"handshake\">Handshake<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#handshake\"></a></h3>\n<ol>\n<li>\n<p>Client sends a packet with the synchronize(SYN) flag to the server which contains client's capabilities and preferred window settings</p>\n</li>\n<li>\n<p>Server responds with both the acknowledgement(ACK) and SYN flag set in the packet</p>\n</li>\n<li>\n<p>Client responds with ac ACK packet to acknowledge the server's SYN packet.</p>\n</li>\n</ol>\n<h4 id=\"acknowledging-receipt-of-packets-by-using-sequence-number\">Acknowledging Receipt of Packets by using Sequence Number<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#acknowledging-receipt-of-packets-by-using-sequence-number\"></a></h4>\n<pre>\n                 CLIENT                             SERVER\n                    |        SYN (Seq = X)            |\n                    |-------------------------------->|\n                    |                                 | Received\n                    |        SYN (Seq = Y)            | Client Seq = X\n                    |&#x3C;--------------------------------|\n           Received |        ACK (Seq = X+1)          |\n     Server Seq = Y |                                 |\n                    |-------------------------------->|\n                    |        ACK (Seq = Y+1)          |\n                    |                                 |\n</pre>\n<p>Sequence number is determined by the sender of the message</p>\n<h4 id=\"receive-buffers-and-windows-sizes\">Receive Buffers and Windows Sizes<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#receive-buffers-and-windows-sizes\"></a></h4>\n<p>TCP allows a single ACK packet to acknowledge the receipt of more than one incoming packet.</p>\n<p>Receiver must advertise to the sender how much space it have available in its receive buffer before it sends an acknowledgment</p>\n<p><strong>Receive Buffer</strong>: per connection block of memory reserved for incoming data on a network connection</p>\n<p><strong>Window Size</strong>: Information in the ACK packet which is the number of bytes the sender can transmit to the receiver without requiring an acknowledgement</p>\n<pre>              Client                         Server\n                |                               |\n                |   ACK (Window size = 3072)    |\nAcknowledging   |------------------------------>| Client can Receive 3072 bytes\ndata            |                               |\n                |                               |\n                |         (1024 bytes)          |\n                |&#x3C;------------------------------|\n                |                               |\n                |         (1024 bytes)          |\n                |&#x3C;------------------------------|\n                |                               |\n                |         (1024 bytes)          |\nBuffer full     |&#x3C;------------------------------|\nwith 3072 bytes |                               |\n                |                               |\n                |   ACK (Window size = 2048)    |\nAcknowledging   |------------------------------>| Client can Receive 2048 bytes\ndata            |                               |\n                |         (1024 bytes)          |\n                |&#x3C;------------------------------|\n                |                               |\n                |         (1024 bytes)          |\nBuffer full     |&#x3C;------------------------------|\nwith 2048 bytes |                               |\n</pre>\n<h3 id=\"termination-tcp-sessions\">Termination TCP Sessions<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#termination-tcp-sessions\"></a></h3>\n<ol>\n<li>\n<p>Client connections changes from <code>ESTABLISHED</code> to <code>FIN_WAIT_1</code></p>\n</li>\n<li>\n<p>Server acknowledges the client's <code>FIN</code> and changes its state from <code>ESTABLISHED</code> to <code>CLOSE_WAIT</code></p>\n</li>\n<li>\n<p>Server sends it own <code>FIN</code> packet changing its state to <code>LAST_ACK</code> and waits for final acknowledgement from client</p>\n</li>\n<li>\n<p>The client acknowledges the server's <code>FIN</code> and enters <code>TIME_WAIT</code> state and sends the final<code>ACK</code></p>\n</li>\n<li>\n<p>The client waits for the the <em>maximum segment life-time</em> then changes its connection state to <code>CLOSED</code></p>\n</li>\n</ol>\n<pre>              Client                         Server\n                |                               |\n    Established |                               | Established\n                |                               |\n                |           FIN                 |\n    FIN_WAIT_1  |------------------------------>|\n                |           ACK                 | CLOSE_WAIT\n                |&#x3C;------------------------------|\n    FIN_WAIT_2  |                               |\n                |                               |\n                |                               |\n                |           FIN                 |\n                |&#x3C;------------------------------| LAST_ACK\n     TIME_WAIT  |           ACK                 |\n                |------------------------------>|\n                |                               | CLOSED\n        CLOSED  |                               |\n</pre>\n<h3 id=\"handling-less-graceful-terminations\">Handling Less Graceful Terminations<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#handling-less-graceful-terminations\"></a></h3>\n<p>When connections are closed/terminated, any connection from the other side of the connection will prompt the closed side of the connection to return  <code>RST</code> packet(reset)</p>","noteIndex":{"id":"root","title":"BrainMatter","desc":"","updated":1668313955403,"created":1602915435296,"stub":false,"nav_order":0,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"7b584540f5ff09a7953c66d95b7ee329","links":[],"anchors":{},"children":["ovOjtfOpF3vhfFUZi6DHp","3dNch4I3rcDy5xXFn3R6B","BWzIJm01jQ6aNNg56CwnS","96Hj5nYpnUciwlTenFpoU","6Wl0i0BjF7yD85uM5RTyK","o3yahkxofd7qighsrvpg893","7kyCk8YAkDvIrxLtAUFkG","A6TBKYAcFVjBqZpdbHuaS","w3B0c1Y72MfzhwoVNx7vx","t6ilpq115sipjv378ambtkv"],"parent":null,"data":{},"body":"\n\n![DeltaManiac](https://raw.githubusercontent.com/DeltaManiac/DeltaManiac/main/vault/assets/banner.svg)\n\n- ðŸ”­ Iâ€™m currently playing Destiny 2\n- ðŸŒ± Iâ€™m currently learning [Rust](https://www.rust-lang.org) at night and [Go](https://golang.org/) at work\n- ðŸ“« How to reach me: [twitter](https://twitter.com/Delta_Maniac)\n- ðŸ˜„ Pronouns: He/Him\n<!-- - âš¡ Fun fact: The banner was provided by [Pushkar Anand](https://github.com/pushkar8723) sourced from [Responsive Cow Jumps Over the Moooooon](https://codepen.io/sdras/pen/doZReX) -->\n<!-- // - ðŸ‘¯ Iâ€™m looking to collaborate on ...\n// - ðŸ¤” Iâ€™m looking for help with ...\n// - ðŸ’¬ Ask me about ... -->\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":true,"siteRootDir":"docs","seo":{"title":"BrainMatter","description":"Personal knowledge space","author":"DeltaManiac","twitter":"delta_maniac"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree","editRepository":"https://github.com/DeltaManiac/deltamaniac.github.io"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://deltamaniac.github.io/","hierarchy":{"root":{"publishByDefault":true}},"siteFaviconPath":"favicon.ico","siteIndex":"root"},"generateChangelog":true}},"__N_SSG":true}