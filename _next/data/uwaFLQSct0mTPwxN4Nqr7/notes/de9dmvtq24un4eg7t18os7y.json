{"pageProps":{"note":{"id":"de9dmvtq24un4eg7t18os7y","title":"JavaScript","desc":"","updated":1668235261910,"created":1668232329484,"custom":{},"fname":"programming.js","type":"note","vault":{"fsPath":"vault"},"contentHash":"2921dd52d61315d4b6cbdfe986a17be1","links":[],"anchors":{"array-buffer":{"type":"header","text":"Array Buffer","value":"array-buffer","line":8,"column":0,"depth":1},"shared-array-buffer":{"type":"header","text":"Shared Array Buffer","value":"shared-array-buffer","line":40,"column":0,"depth":1}},"children":[],"parent":"o3yahkxofd7qighsrvpg893","data":{}},"body":"<h1 id=\"javascript\">JavaScript<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#javascript\"></a></h1>\n<h1 id=\"array-buffer\">Array Buffer<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#array-buffer\"></a></h1>\n<p>The ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer.\nSynonymous to Byte Buffer</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayBuffer</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 8 Bytes = 8*8bits = 64bits</span>\n<span class=\"token keyword\">const</span> view <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// can store 2 elements of 32bit in buffer</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span>    int32Array <span class=\"token punctuation\">[</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span>\n<span class=\"token operator\">></span>      <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token operator\">></span>      <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token operator\">></span>      buffer<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">ArrayBuffer</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">byteLength</span><span class=\"token operator\">:</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span>      byteLength<span class=\"token operator\">:</span> <span class=\"token number\">8</span>\n<span class=\"token operator\">></span>      byteOffset<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token operator\">></span>      length<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n<span class=\"token operator\">></span>      <span class=\"token operator\">&#x3C;</span>prototype<span class=\"token operator\">></span><span class=\"token operator\">:</span> <span class=\"token class-name\">Int32Array</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">prototype</span> <span class=\"token punctuation\">{</span> â€¦ <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> view2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Int16Array</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// can store 4 elments of 16bit in buffer</span>\n<span class=\"token console class-name\">console</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">log</span><span class=\"token punctuation\">(</span>view2<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">></span>    int16Array <span class=\"token punctuation\">[</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span>\n<span class=\"token operator\">></span>      <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token operator\">></span>      <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token operator\">></span>      <span class=\"token number\">2</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token operator\">></span>      <span class=\"token number\">3</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token operator\">></span>      buffer<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">ArrayBuffer</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">byteLength</span><span class=\"token operator\">:</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span>      byteLength<span class=\"token operator\">:</span> <span class=\"token number\">8</span>\n<span class=\"token operator\">></span>      byteOffset<span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n<span class=\"token operator\">></span>      length<span class=\"token operator\">:</span> <span class=\"token number\">4</span>\n<span class=\"token operator\">></span>      <span class=\"token operator\">&#x3C;</span>prototype<span class=\"token operator\">></span><span class=\"token operator\">:</span> <span class=\"token class-name\">Int16Array</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">prototype</span> <span class=\"token punctuation\">{</span> â€¦ <span class=\"token punctuation\">}</span>\n</code></pre>\n<h1 id=\"shared-array-buffer\">Shared Array Buffer<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#shared-array-buffer\"></a></h1>\n<p>The SharedArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer, similar to the ArrayBuffer object, but in a way that they can be used to create views on shared memory. A SharedArrayBuffer is not a Transferable Object, unlike an ArrayBuffer which is transferable.</p>","noteIndex":{"id":"root","title":"BrainMatter","desc":"","updated":1668313955403,"created":1602915435296,"stub":false,"nav_order":0,"custom":{"stub":false,"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"7b584540f5ff09a7953c66d95b7ee329","links":[],"anchors":{},"children":["ovOjtfOpF3vhfFUZi6DHp","3dNch4I3rcDy5xXFn3R6B","BWzIJm01jQ6aNNg56CwnS","96Hj5nYpnUciwlTenFpoU","6Wl0i0BjF7yD85uM5RTyK","o3yahkxofd7qighsrvpg893","7kyCk8YAkDvIrxLtAUFkG","A6TBKYAcFVjBqZpdbHuaS","w3B0c1Y72MfzhwoVNx7vx","t6ilpq115sipjv378ambtkv"],"parent":null,"data":{},"body":"\n\n![DeltaManiac](https://raw.githubusercontent.com/DeltaManiac/DeltaManiac/main/vault/assets/banner.svg)\n\n- ðŸ”­ Iâ€™m currently playing Destiny 2\n- ðŸŒ± Iâ€™m currently learning [Rust](https://www.rust-lang.org) at night and [Go](https://golang.org/) at work\n- ðŸ“« How to reach me: [twitter](https://twitter.com/Delta_Maniac)\n- ðŸ˜„ Pronouns: He/Him\n<!-- - âš¡ Fun fact: The banner was provided by [Pushkar Anand](https://github.com/pushkar8723) sourced from [Responsive Cow Jumps Over the Moooooon](https://codepen.io/sdras/pen/doZReX) -->\n<!-- // - ðŸ‘¯ Iâ€™m looking to collaborate on ...\n// - ðŸ¤” Iâ€™m looking for help with ...\n// - ðŸ’¬ Ask me about ... -->\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"vaultSelectionModeOnCreate":"smart","fuzzThreshold":0.2}},"randomNote":{},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":true,"siteRootDir":"docs","seo":{"title":"BrainMatter","description":"Personal knowledge space","author":"DeltaManiac","twitter":"delta_maniac"},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree","editRepository":"https://github.com/DeltaManiac/deltamaniac.github.io"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","siteUrl":"https://deltamaniac.github.io/","hierarchy":{"root":{"publishByDefault":true}},"siteFaviconPath":"favicon.ico","siteIndex":"root"},"generateChangelog":true}},"__N_SSG":true}